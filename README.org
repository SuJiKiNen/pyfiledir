#+html: <a href="https://dev.azure.com/sujikinen/pyfiledir/_build/latest?definitionId=1&branchName=master"> <img src="https://dev.azure.com/sujikinen/pyfiledir/_apis/build/status/SuJiKiNen.bash-pinyin-abbrev-completion?branchName=master#.svg" alt="Azure Pipeline Build Status Badge"> </a>

* Demo
  [[demo.svg]]

* Environment Variables
  #+BEGIN_SRC python :exports results :output table

    from pyfiledir.py_core import DEFAULT_PYFILEDIR_ENVS
    results = []
    header = ["Environment variable name", "Default value", "Explanation"]
    results.append(header)
    results.append(None)
    for key, val in DEFAULT_PYFILEDIR_ENVS.__members__.items():
        results.append([key, "={}=".format(val), val.docstring])
    return results
  #+END_SRC

  #+RESULTS:
  | Environment variable name        | Default value | Explanation                                |
  |----------------------------------+---------------+--------------------------------------------|
  | PYFILEDIR_CANDIDATE_SEP          | =\n=          | how pyfiledir join candidates              |
  | PYFILEDIR_WILDCARD               | =#=           | wildcard match charactor for dir or file   |
  | PYFILEDIR_ADD_TRAILING_SLASH     | =True=        | add trailing slash for directory candidate |
  | PYFILEDIR_KEEP_LEADING_DOT_SLASH | =True=        | keep leading ./ in path                    |
  | PYFILEDIR_COMPLETE_COMMON_PREFIX | =True=        | complete common prefix of candidates first |
  | PYFILEDIR_EXPAND_TIDLE           | =False=       | expand =~= to =/home/<user>=               |
  | PYFILEDIR_IGNORE_CASE            | =True=        | completion ignore case                     |
  | PYFILEDIR_USE_UNIHAN_DICT        | =True=        | use rich Unihan dict                       |
  | PYFILEDIR_USE_NATURAL_SORT       | =False=       | use natural sort, sorting filenames        |


  pyfiledir default following some behaviors from .inputrc, see equivalents below:

  #+BEGIN_SRC python :exports results :output table
    from pyfiledir.py_core import inputrc_to_pyfiledir_env_map
    results = []
    header = [
        "INPUTRC setting name",
        "PYFILEDIR environment variable name",
    ]
    results.append(header)
    results.append(None)
    for key, val in inputrc_to_pyfiledir_env_map.items():
        results.append([key, val])
    return results
  #+END_SRC

  #+RESULTS:
  | INPUTRC setting name   | PYFILEDIR environment variable name |
  |------------------------+-------------------------------------|
  | mark-directories       | PYFILEDIR_ADD_TRAILING_SLASH        |
  | completion-ignore-case | PYFILEDIR_IGNORE_CASE               |
  | expand-tilde           | PYFILEDIR_EXPAND_TIDLE              |

* Development Guide
** Create Demo
   =python helper/create_demo.py &=
** Profiling
   requirements: =python 3.7=
   #+BEGIN_SRC shell
     python -m cProfile -m pyfiledir [option] <arg>
   #+END_SRC
